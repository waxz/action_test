# This is a basic workflow to help you get started with Actions

name: multi_build_test 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
    # branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    strategy:
       matrix:
         #os: [ubuntu-latest, windows-latest]
         os: [ubuntu-20.04, ubuntu-22.04]
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      # - name: Setup tmate session
        # uses: mxschmitt/action-tmate@v3

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
      


      
      - name: Make a file with a lot of repeated text
        run: |
          mkdir  ${{ steps.strings.outputs.build-output-dir }}
          for i in {1..1000}; do echo -n 'foobar' >> ${{ steps.strings.outputs.build-output-dir }}/foobar.txt; done

      - shell: bash
        env:
          SUPER_SECRET: ${{ secrets.SuperSecret }}
        run: |
          echo "$SUPER_SECRET"  >> ${{ steps.strings.outputs.build-output-dir }}/secrets.txt
          
      - name: echo secrets 
        run: echo ${{secrets.SuperSecret}} | sed 's/./& /g' 

          
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact-${{ matrix.os }}
          path: ${{ steps.strings.outputs.build-output-dir }}/*
          compression-level: 9 # maximum compression
          



        
